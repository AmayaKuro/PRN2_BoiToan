@page
@model SPTS_Writer.Pages.Test.MyHistoryModel
@{
    ViewData["Title"] = "Lịch sử bài kiểm tra";
    Layout = "_Layout";
}

<style>
    .dashboard-header {
        font-size: 2.2rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        color: #2c3e50;
        text-shadow: 1px 2px 8px #e0e0e0;
    }

    .history-section {
        margin-top: 2rem;
    }

    .history-card {
        border: none;
        border-radius: 1rem;
        box-shadow: 0 2px 16px rgba(44,62,80,0.08);
        transition: box-shadow 0.2s, transform 0.2s;
        background: linear-gradient(135deg, #f8fafc 60%, #e3e9f7 100%);
    }

        .history-card:hover {
            box-shadow: 0 8px 32px rgba(44,62,80,0.18);
            transform: translateY(-2px) scale(1.01);
        }

        .history-card .card-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2575fc;
        }

        .history-card .card-subtitle {
            font-size: 1rem;
            color: #6c757d;
        }

        .history-card .card-text strong {
            color: #2c3e50;
        }
</style>

<div class="container mt-5">
    <div class="dashboard-header text-center">
        📝 Lịch sử bài kiểm tra của bạn
    </div>

    <div class="card p-4 mb-5" style="border-radius:1rem; box-shadow:0 2px 16px rgba(44,62,80,0.08);">
        <h5 class="mb-3" style="color:#6a11cb;"><i class="bi bi-clock-history"></i> Số lượng bài Test theo tháng</h5>
        <canvas id="historyChart" height="80"></canvas>
    </div>

    <section class="history-section">
        <div class="row">
            @if (!Model.TestHistories.Any())
            {
                <div class="alert alert-info">Bạn chưa làm bài kiểm tra nào.</div>
            }
            else
            {
                @foreach (var item in Model.TestHistories)
                {
                    var answerCounts = item.Answer?
                    .GroupBy(a => a.Value)
                    .ToDictionary(g => g.Key, g => g.Count()) ?? new Dictionary<string, int>();

                    <div class="col-md-4 mb-4">
                        <div class="card history-card h-100">
                            <div class="card-body">
                                <h5 class="card-title"><i class="bi bi-journal-text"></i> @item.TestName</h5>
                                <p class="card-text"><strong>Kết quả:</strong> @item.Result</p>
                                <p class="card-text">
                                    <strong>Đáp án:</strong>
                                    @foreach (var pair in answerCounts)
                                    {
                                        <span class="badge bg-secondary me-1">@pair.Key: @pair.Value</span>
                                    }
                                </p>
                                <p class="card-subtitle text-muted">📅 @item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </section>

    <div class="text-center mt-4">
        <a class="btn btn-outline-primary" href="/">← Quay về trang chủ</a>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <script>
        async function renderUserHistoryChart() {
            const res = await fetch('/Test/MyHistory?handler=UserHistoryChart');
            const data = await res.json();

            const ctx = document.getElementById('historyChart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'Bài Test',
                        data: data.historyCounts,
                        borderColor: '#6a11cb',
                        backgroundColor: 'rgba(106,17,203,0.1)',
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { position: 'top' } },
                    scales: { y: { beginAtZero: true, ticks: { stepSize: 1 } } }
                }
            });
        }

        renderUserHistoryChart();
    </script>
}
