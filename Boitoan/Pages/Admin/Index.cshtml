@page
@model Boitoan.Pages.Admin.IndexModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_AdminLayout";
}

<style>
    .dashboard-header {
        font-size: 2.5rem;
        font-weight: 700;
        letter-spacing: 1px;
        margin-bottom: 2rem;
        color: #2c3e50;
        text-shadow: 1px 2px 8px #e0e0e0;
    }

    .stat-card {
        border: none;
        border-radius: 1rem;
        box-shadow: 0 4px 24px rgba(44,62,80,0.08);
        transition: transform 0.2s;
    }

        .stat-card:hover {
            transform: translateY(-4px) scale(1.03);
            box-shadow: 0 8px 32px rgba(44,62,80,0.15);
        }

        .stat-card .card-header {
            font-size: 1.1rem;
            font-weight: 600;
            letter-spacing: 0.5px;
            background: linear-gradient(90deg, #6a11cb 0%, #2575fc 100%);
            color: #fff;
            border-top-left-radius: 1rem;
            border-top-right-radius: 1rem;
        }

        .stat-card .card-title {
            font-size: 2.2rem;
            font-weight: 700;
            color: #2c3e50;
        }

    .history-section {
        margin-top: 2.5rem;
    }

    .history-card {
        border: none;
        border-radius: 1rem;
        box-shadow: 0 2px 16px rgba(44,62,80,0.08);
        transition: box-shadow 0.2s, transform 0.2s;
        background: linear-gradient(135deg, #f8fafc 60%, #e3e9f7 100%);
    }

        .history-card:hover {
            box-shadow: 0 8px 32px rgba(44,62,80,0.18);
            transform: translateY(-2px) scale(1.01);
        }

        .history-card .card-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2575fc;
        }

        .history-card .card-subtitle {
            font-size: 1rem;
            color: #6c757d;
        }

        .history-card .card-text strong {
            color: #2c3e50;
        }

    #loading {
        text-align: center;
        font-size: 1.2rem;
        color: #2575fc;
        margin-top: 1rem;
    }
</style>

<div class="dashboard-header text-center mb-4">
    <i class="bi bi-speedometer2"></i> Admin Dashboard
</div>
<div class="row mb-4">
    <div class="col-md-4">
        <div class="card stat-card bg-primary bg-gradient mb-3">
            <div class="card-header">Tổng số người dùng</div>
            <div class="card-body text-center">
                <h3 class="card-title">@Model.TotalUsers</h3>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card stat-card bg-success bg-gradient mb-3">
            <div class="card-header">Tổng bài kiểm tra</div>
            <div class="card-body text-center">
                <h3 class="card-title">@Model.TotalTests</h3>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card stat-card bg-info bg-gradient mb-3">
            <div class="card-header">Bài kiểm tra đã làm</div>
            <div class="card-body text-center">
                <h3 class="card-title">@Model.TotalHistories</h3>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-6 mb-3">
        <div class="card p-4" style="border-radius:1rem; box-shadow:0 2px 16px rgba(44,62,80,0.08);">
            <h5 class="mb-3" style="color:#2575fc;"><i class="bi bi-person"></i> Người dùng</h5>
            <canvas id="userChart" height="80"></canvas>
        </div>
    </div>
    <div class="col-md-6 mb-3">
        <div class="card p-4" style="border-radius:1rem; box-shadow:0 2px 16px rgba(44,62,80,0.08);">
            <h5 class="mb-3" style="color:#6a11cb;"><i class="bi bi-clock-history"></i> Số lượng bài Test đã hoàn thành</h5>
            <canvas id="historyChart" height="80"></canvas>
        </div>
    </div>
</div>

<section class="history-section">
    <h2 class="mb-4" style="font-weight:600;color:#2575fc;">
        <i class="bi bi-clock-history"></i> Lịch sử bài kiểm tra
    </h2>
    <div class="row" id="history-cards"></div>
    <div id="loading" style="display:none;">Đang tải...</div>
</section>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/signalrhub")
            .build();

        connection.on("ReloadList", (history) => {
            // +1 TotalHistories
            const totalHistoriesElem = document.querySelector('.stat-card.bg-info .card-title');
            if (totalHistoriesElem && !isNaN(parseInt(totalHistoriesElem.textContent))) {
                totalHistoriesElem.textContent = parseInt(totalHistoriesElem.textContent) + 1;
            }

            // Append new history card to the head of the list
            if (history) {
                const container = document.getElementById('history-cards');
                const card = document.createElement('div');
                card.className = "col-md-4 mb-4";
                card.innerHTML = `
                    <div class="card history-card h-100">
                        <div class="card-body">
                            <h5 class="card-title"><i class="bi bi-journal-text"></i> ${history.testName}</h5>
                            <h6 class="card-subtitle mb-2"><i class="bi bi-person"></i> ${history.userName}</h6>
                            <p class="card-text"><strong>Kết quả:</strong> ${history.result}</p>
                            <p class="card-text">
                                <strong>Đáp án:</strong>
                                ${
                                    history.answerCounts
                                        ? Object.entries(history.answerCounts).map(([k, v]) => `<span class="badge bg-secondary me-1">${k}: ${v}</span>`).join(' ')
                                        : ''
                                }
                            </p>
                        </div>
                    </div>
                `;

                if (container.firstChild) {
                    container.insertBefore(card, container.firstChild);
                } else {
                    container.appendChild(card);
                }

                // Add 1 to the "Bài Test" (test taken) chart
                const historyChartElem = document.getElementById('historyChart');
                if (historyChartElem && historyChartElem.chart) {
                    const chart = historyChartElem.chart;
                    if (chart.data.datasets && chart.data.datasets.length > 0) {
                        // Add 1 to the last data point
                        const lastIndex = chart.data.datasets[0].data.length - 1;
                        if (lastIndex >= 0) {
                            chart.data.datasets[0].data[lastIndex] += 1;
                            chart.update();
                        }
                    }
                }
            }
        });

        connection.start()
            .then(() => console.log("✅ SignalR connected"))
            .catch(err => console.error("❌ SignalR connect error:", err));

        let skip = 0;
        const take = 5;
        let loading = false;
        let allLoaded = false;

        async function loadMore() {
            if (loading || allLoaded) return;
            loading = true;
            document.getElementById('loading').style.display = 'block';
            const res = await fetch(`/admin?handler=Stats&skip=${skip}&take=${take}`);
            const data = await res.json();
            if (data.length < take) allLoaded = true;
            skip += data.length;
            const container = document.getElementById('history-cards');
            data.forEach(item => {
                const card = document.createElement('div');
                card.className = "col-md-4 mb-4";
                card.innerHTML = `
                    <div class="card history-card h-100">
                        <div class="card-body">
                            <h5 class="card-title"><i class="bi bi-journal-text"></i> ${item.testName}</h5>
                            <h6 class="card-subtitle mb-2"><i class="bi bi-person"></i> ${item.userName}</h6>
                            <p class="card-text"><strong>Kết quả:</strong> ${item.result}</p>
                            <p class="card-text">
                                <strong>Đáp án:</strong>
                                ${
                                    item.answerCounts
                                        ? Object.entries(item.answerCounts).map(([k, v]) => `<span class="badge bg-secondary me-1">${k}: ${v}</span>`).join(' ')
                                        : ''
                                }
                            </p>
                        </div>
                    </div>
                `;
                container.appendChild(card);
            });
            document.getElementById('loading').style.display = 'none';
            loading = false;
        }

        // Initial load
        loadMore();

        // Infinite scroll
        window.addEventListener('scroll', () => {
            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 100) {
                loadMore();
            }
        });
        async function renderUserAndHistoryCharts() {
            const res = await fetch('/admin?handler=UserHistoryChart');
            const data = await res.json();

            // User Chart
            const userCtx = document.getElementById('userChart').getContext('2d');
            new Chart(userCtx, {
                type: 'line',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'Người dùng',
                        data: data.userCounts,
                        borderColor: '#2575fc',
                        backgroundColor: 'rgba(37,117,252,0.1)',
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { position: 'top' } },
                    scales: { y: { beginAtZero: true, ticks: { stepSize: 2 }} }
                }
            });

            // History Chart
            const historyCtx = document.getElementById('historyChart').getContext('2d');
            new Chart(historyCtx, {
                type: 'line',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'Bài Test',
                        data: data.historyCounts,
                        borderColor: '#6a11cb',
                        backgroundColor: 'rgba(106,17,203,0.1)',
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { position: 'top' } },
                    scales: { y: { beginAtZero: true, ticks: { stepSize: 3 } } }
                }
            });
        }
        renderUserAndHistoryCharts();
    </script>
}
